######### SEGUNDO PROMPT   ###########

# Write a JUnit test for the function: check in "CLIENT CODE". The test should verify whether the function check is affected by the vulnerability: CVE-2020-28052, or affected by vulnerable APIs: [OpenBSDBCrypt.checkPassword]. Mimic the test function "TEST FUNCTION:" performTest I provide to generate the input in your test. For the provided code "CLIENT CODE", mock the classes and functions that are not Java SE APIs and have no definition provided.

TEST FUNCTION:
``` Java
public void performTest() throws Exception {
    // Código da Listagem 1:
    // Este teste demonstra a vulnerabilidade no Bouncy Castle 1.65 e 1.66
    // onde 'wrong-token' é erroneamente considerado uma senha válida.
    // Ele estabelece o comportamento esperado de uma versão segura (passar a segunda asserção)
    // e o comportamento de uma versão vulnerável (falhar a segunda asserção).

    int costFactor = 4;
    SecureRandom random = new SecureRandom();
    byte[] salt = new byte[16]; // 'salt' precisa ser inicializado ou mockado adequadamente
    for (int i = 0; i < 100; i++) {
        random.nextBytes(salt);
        final String tokenString = OpenBSDBCrypt.generate("test-token".toCharArray(), salt, costFactor);
        assertTrue(OpenBSDBCrypt.checkPassword(tokenString, "test-token".toCharArray()));
        /* Uma versão segura de BC deveria passar a seguinte asserção. Uma versão vulnerável de BC deveria falhar
        a asserção, pois trata senhas não correspondentes como correspondentes. */
        assertTrue(!OpenBSDBCrypt.checkPassword(tokenString, "wrong-token".toCharArray()));
    }
}
CLIENT CODE:
package org.example;

import org.bouncycastle.crypto.generators.OpenBSDBCrypt;

public class BcryptPasswordHashFunction {
    public boolean check(String passwordHash, String password) {
        return OpenBSDBCrypt.checkPassword(passwordHash, password.toCharArray());
    }
}


